@startuml
' Enum for animal species, remains unchanged.
enum Species {
  Canine, Feline, Avian, Rodent,
  Reptile, Anfibian, Fish, Other
}

' The central class that manages the hospital's state and operations.
class VeterinaryHospital {
  - doctors: List<Doctor>
  - patients: List<Patient>
  - schedule: List<Appointment>
  - DEFAULT_APPOINTMENT_DURATION_MINUTES: long
  + VeterinaryHospital()
  + getDoctors(): List<Doctor>
  + addDoctor(doctor: Doctor): void
  + removeDoctor(doctor: Doctor): void
  + getPatients(): List<Patient>
  + addPatient(patient: Patient): void
  + removePatient(patient: Patient): void
  + getSchedule(): List<Appointment>
  + scheduleAppointment(patient: Patient, doctor: Doctor, startTime: LocalDateTime): Appointment
  + scheduleAppointment(patient: Patient, doctor: Doctor, startTime: LocalDateTime, endTime: LocalDateTime): Appointment
}

' Patient class, now with a cleaner interface for managing medical history.
class Patient {
  - name: String
  - age: byte
  - tutor: Tutor
  - species: Species
  - id: long
  - microchip: boolean
  - insurance: boolean
  - medicalHistory: List<Appointment>
  - sex: boolean
  - weight: float
  - breed: String
  + getMedicalHistory(): List<Appointment>
  + addAppointmentToHistory(appointment: Appointment): void
  + removeAppointmentFromHistory(appointment: Appointment): void
  ' ... other getters and setters are implied for brevity ...
}

' Tutor class, largely unchanged. Manages a list of their pets.
class Tutor {
  - name: String
  - id: long
  - pets: List<Patient>
  - email: String
  - phone: long
  + getPets(): List<Patient>
  + addPet(patient: Patient): void
  + removePet(patient: Patient): void
  ' ... other getters and setters are implied for brevity ...
}

' Doctor class, unchanged. It's a data object.
class Doctor {
  - name: String
  - specialization: String
  - id: long
  ' ... getters and setters are implied for brevity ...
}

' Appointment class now uses precise LocalDateTime objects.
class Appointment {
  - patient: Patient
  - doctor: Doctor
  - startTime: LocalDateTime
  - endTime: LocalDateTime
  - tutor: Tutor
  - billing: Billing
  - report: String
  + Appointment(patient: Patient, doctor: Doctor, startTime: LocalDateTime, endTime: LocalDateTime, tutor: Tutor, billing: Billing)
  ' ... getters are implied for brevity ...
}

' Billing class, unchanged. Linked to one appointment.
class Billing {
  - amount: double
  - paid: boolean
  - appointment: Appointment
  ' ... getters and setters are implied for brevity ...
}

' --- Relationships ---
' The VeterinaryHospital is the central aggregator.
VeterinaryHospital "1" o-- "0..*" Doctor
VeterinaryHospital "1" o-- "0..*" Patient
VeterinaryHospital "1" o-- "0..*" Appointment

' Core entity relationships.
Appointment "1" -- "1" Billing
Appointment --> "1" Patient
Appointment --> "1" Doctor
Appointment --> "1" Tutor

Patient "1" -- "1" Tutor
Tutor "1" -- "0..*" Patient : manages >

@enduml